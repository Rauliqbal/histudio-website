{
  "version": 3,
  "sources": ["../../deepmerge/dist/cjs.js", "../../vue-meta/dist/vue-meta.esm.js", "dep:vue-meta"],
  "sourcesContent": ["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n", "/**\n * vue-meta v2.4.0\n * (c) 2020\n * - Declan de Wet\n * - S\u00E9bastien Chopin (@Atinux)\n * - Pim (@pimlie)\n * - All the amazing contributors\n * @license MIT\n */\n\nimport deepmerge from 'deepmerge';\n\nvar version = \"2.4.0\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\n/**\n * checks if passed argument is an array\n * @param  {any}  arg - the object to check\n * @return {Boolean} - true if `arg` is an array\n */\nfunction isArray(arg) {\n  return Array.isArray(arg);\n}\nfunction isUndefined(arg) {\n  return typeof arg === 'undefined';\n}\nfunction isObject(arg) {\n  return _typeof(arg) === 'object';\n}\nfunction isPureObject(arg) {\n  return _typeof(arg) === 'object' && arg !== null;\n}\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction hasGlobalWindowFn() {\n  try {\n    return !isUndefined(window);\n  } catch (e) {\n    return false;\n  }\n}\nvar hasGlobalWindow = hasGlobalWindowFn();\n\nvar _global = hasGlobalWindow ? window : global;\n\nvar console = _global.console || {};\nfunction warn(str) {\n  /* istanbul ignore next */\n  if (!console || !console.warn) {\n    return;\n  }\n\n  console.warn(str);\n}\nvar showWarningNotSupported = function showWarningNotSupported() {\n  return warn('This vue app/component has no vue-meta configuration');\n};\n\n/**\n * These are constant variables used throughout the application.\n */\n// set some sane defaults\nvar defaultInfo = {\n  title: undefined,\n  titleChunk: '',\n  titleTemplate: '%s',\n  htmlAttrs: {},\n  bodyAttrs: {},\n  headAttrs: {},\n  base: [],\n  link: [],\n  meta: [],\n  style: [],\n  script: [],\n  noscript: [],\n  __dangerouslyDisableSanitizers: [],\n  __dangerouslyDisableSanitizersByTagID: {}\n};\nvar rootConfigKey = '_vueMeta'; // This is the name of the component option that contains all the information that\n// gets converted to the various meta tags & attributes for the page.\n\nvar keyName = 'metaInfo'; // This is the attribute vue-meta arguments on elements to know which it should\n// manage and which it should ignore.\n\nvar attribute = 'data-vue-meta'; // This is the attribute that goes on the `html` tag to inform `vue-meta`\n// that the server has already generated the meta tags for the initial render.\n\nvar ssrAttribute = 'data-vue-meta-server-rendered'; // This is the property that tells vue-meta to overwrite (instead of append)\n// an item in a tag list. For example, if you have two `meta` tag list items\n// that both have `vmid` of \"description\", then vue-meta will overwrite the\n// shallowest one with the deepest one.\n\nvar tagIDKeyName = 'vmid'; // This is the key name for possible meta templates\n\nvar metaTemplateKeyName = 'template'; // This is the key name for the content-holding property\n\nvar contentKeyName = 'content'; // The id used for the ssr app\n\nvar ssrAppId = 'ssr'; // How long meta update\n\nvar debounceWait = 10; // How long meta update\n\nvar waitOnDestroyed = true;\nvar defaultOptions = {\n  keyName: keyName,\n  attribute: attribute,\n  ssrAttribute: ssrAttribute,\n  tagIDKeyName: tagIDKeyName,\n  contentKeyName: contentKeyName,\n  metaTemplateKeyName: metaTemplateKeyName,\n  waitOnDestroyed: waitOnDestroyed,\n  debounceWait: debounceWait,\n  ssrAppId: ssrAppId\n}; // might be a bit ugly, but minimizes the browser bundles a bit\n\nvar defaultInfoKeys = Object.keys(defaultInfo); // The metaInfo property keys which are used to disable escaping\n\nvar disableOptionKeys = [defaultInfoKeys[12], defaultInfoKeys[13]]; // List of metaInfo property keys which are configuration options (and dont generate html)\n\nvar metaInfoOptionKeys = [defaultInfoKeys[1], defaultInfoKeys[2], 'changed'].concat(disableOptionKeys); // List of metaInfo property keys which only generates attributes and no tags\n\nvar metaInfoAttributeKeys = [defaultInfoKeys[3], defaultInfoKeys[4], defaultInfoKeys[5]]; // HTML elements which support the onload event\n\nvar tagsSupportingOnload = ['link', 'style', 'script']; // HTML elements which dont have a head tag (shortened to our needs)\n// see: https://www.w3.org/TR/html52/document-metadata.html\n\nvar tagsWithoutEndTag = ['base', 'meta', 'link']; // HTML elements which can have inner content (shortened to our needs)\n\nvar tagsWithInnerContent = ['noscript', 'script', 'style']; // Attributes which are inserted as childNodes instead of HTMLAttribute\n\nvar tagAttributeAsInnerContent = ['innerHTML', 'cssText', 'json'];\nvar tagProperties = ['once', 'skip', 'template']; // Attributes which should be added with data- prefix\n\nvar commonDataAttributes = ['body', 'pbody']; // from: https://github.com/kangax/html-minifier/blob/gh-pages/src/htmlminifier.js#L202\n\nvar booleanHtmlAttributes = ['allowfullscreen', 'amp', 'amp-boilerplate', 'async', 'autofocus', 'autoplay', 'checked', 'compact', 'controls', 'declare', 'default', 'defaultchecked', 'defaultmuted', 'defaultselected', 'defer', 'disabled', 'enabled', 'formnovalidate', 'hidden', 'indeterminate', 'inert', 'ismap', 'itemscope', 'loop', 'multiple', 'muted', 'nohref', 'noresize', 'noshade', 'novalidate', 'nowrap', 'open', 'pauseonexit', 'readonly', 'required', 'reversed', 'scoped', 'seamless', 'selected', 'sortable', 'truespeed', 'typemustmatch', 'visible'];\n\nvar batchId = null;\nfunction triggerUpdate(_ref, rootVm, hookName) {\n  var debounceWait = _ref.debounceWait;\n\n  // if an update was triggered during initialization or when an update was triggered by the\n  // metaInfo watcher, set initialized to null\n  // then we keep falsy value but know we need to run a triggerUpdate after initialization\n  if (!rootVm[rootConfigKey].initialized && (rootVm[rootConfigKey].initializing || hookName === 'watcher')) {\n    rootVm[rootConfigKey].initialized = null;\n  }\n\n  if (rootVm[rootConfigKey].initialized && !rootVm[rootConfigKey].pausing) {\n    // batch potential DOM updates to prevent extraneous re-rendering\n    // eslint-disable-next-line no-void\n    batchUpdate(function () {\n      return void rootVm.$meta().refresh();\n    }, debounceWait);\n  }\n}\n/**\n * Performs a batched update.\n *\n * @param  {(null|Number)} id - the ID of this update\n * @param  {Function} callback - the update to perform\n * @return {Number} id - a new ID\n */\n\nfunction batchUpdate(callback, timeout) {\n  timeout = timeout === undefined ? 10 : timeout;\n\n  if (!timeout) {\n    callback();\n    return;\n  }\n\n  clearTimeout(batchId);\n  batchId = setTimeout(function () {\n    callback();\n  }, timeout);\n  return batchId;\n}\n\n/*\n * To reduce build size, this file provides simple polyfills without\n * overly excessive type checking and without modifying\n * the global Array.prototype\n * The polyfills are automatically removed in the commonjs build\n * Also, only files in client/ & shared/ should use these functions\n * files in server/ still use normal js function\n */\nfunction find(array, predicate, thisArg) {\n  if ( !Array.prototype.find) {\n    // idx needs to be a Number, for..in returns string\n    for (var idx = 0; idx < array.length; idx++) {\n      if (predicate.call(thisArg, array[idx], idx, array)) {\n        return array[idx];\n      }\n    }\n\n    return;\n  }\n\n  return array.find(predicate, thisArg);\n}\nfunction findIndex(array, predicate, thisArg) {\n  if ( !Array.prototype.findIndex) {\n    // idx needs to be a Number, for..in returns string\n    for (var idx = 0; idx < array.length; idx++) {\n      if (predicate.call(thisArg, array[idx], idx, array)) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n\n  return array.findIndex(predicate, thisArg);\n}\nfunction toArray(arg) {\n  if ( !Array.from) {\n    return Array.prototype.slice.call(arg);\n  }\n\n  return Array.from(arg);\n}\nfunction includes(array, value) {\n  if ( !Array.prototype.includes) {\n    for (var idx in array) {\n      if (array[idx] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return array.includes(value);\n}\n\nvar querySelector = function querySelector(arg, el) {\n  return (el || document).querySelectorAll(arg);\n};\nfunction getTag(tags, tag) {\n  if (!tags[tag]) {\n    tags[tag] = document.getElementsByTagName(tag)[0];\n  }\n\n  return tags[tag];\n}\nfunction getElementsKey(_ref) {\n  var body = _ref.body,\n      pbody = _ref.pbody;\n  return body ? 'body' : pbody ? 'pbody' : 'head';\n}\nfunction queryElements(parentNode, _ref2, attributes) {\n  var appId = _ref2.appId,\n      attribute = _ref2.attribute,\n      type = _ref2.type,\n      tagIDKeyName = _ref2.tagIDKeyName;\n  attributes = attributes || {};\n  var queries = [\"\".concat(type, \"[\").concat(attribute, \"=\\\"\").concat(appId, \"\\\"]\"), \"\".concat(type, \"[data-\").concat(tagIDKeyName, \"]\")].map(function (query) {\n    for (var key in attributes) {\n      var val = attributes[key];\n      var attributeValue = val && val !== true ? \"=\\\"\".concat(val, \"\\\"\") : '';\n      query += \"[data-\".concat(key).concat(attributeValue, \"]\");\n    }\n\n    return query;\n  });\n  return toArray(querySelector(queries.join(', '), parentNode));\n}\nfunction removeElementsByAppId(_ref3, appId) {\n  var attribute = _ref3.attribute;\n  toArray(querySelector(\"[\".concat(attribute, \"=\\\"\").concat(appId, \"\\\"]\"))).map(function (el) {\n    return el.remove();\n  });\n}\nfunction removeAttribute(el, attributeName) {\n  el.removeAttribute(attributeName);\n}\n\nfunction hasMetaInfo(vm) {\n  vm = vm || this;\n  return vm && (vm[rootConfigKey] === true || isObject(vm[rootConfigKey]));\n} // a component is in a metaInfo branch when itself has meta info or one of its (grand-)children has\n\nfunction inMetaInfoBranch(vm) {\n  vm = vm || this;\n  return vm && !isUndefined(vm[rootConfigKey]);\n}\n\nfunction pause(rootVm, refresh) {\n  rootVm[rootConfigKey].pausing = true;\n  return function () {\n    return resume(rootVm, refresh);\n  };\n}\nfunction resume(rootVm, refresh) {\n  rootVm[rootConfigKey].pausing = false;\n\n  if (refresh || refresh === undefined) {\n    return rootVm.$meta().refresh();\n  }\n}\n\nfunction addNavGuards(rootVm) {\n  var router = rootVm.$router; // return when nav guards already added or no router exists\n\n  if (rootVm[rootConfigKey].navGuards || !router) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  rootVm[rootConfigKey].navGuards = true;\n  router.beforeEach(function (to, from, next) {\n    pause(rootVm);\n    next();\n  });\n  router.afterEach(function () {\n    rootVm.$nextTick(function () {\n      var _resume = resume(rootVm),\n          metaInfo = _resume.metaInfo;\n\n      if (metaInfo && isFunction(metaInfo.afterNavigation)) {\n        metaInfo.afterNavigation(metaInfo);\n      }\n    });\n  });\n}\n\nvar appId = 1;\nfunction createMixin(Vue, options) {\n  // for which Vue lifecycle hooks should the metaInfo be refreshed\n  var updateOnLifecycleHook = ['activated', 'deactivated', 'beforeMount'];\n  var wasServerRendered = false; // watch for client side component updates\n\n  return {\n    beforeCreate: function beforeCreate() {\n      var _this2 = this;\n\n      var rootKey = '$root';\n      var $root = this[rootKey];\n      var $options = this.$options;\n      var devtoolsEnabled = Vue.config.devtools;\n      Object.defineProperty(this, '_hasMetaInfo', {\n        configurable: true,\n        get: function get() {\n          // Show deprecation warning once when devtools enabled\n          if (devtoolsEnabled && !$root[rootConfigKey].deprecationWarningShown) {\n            warn('VueMeta DeprecationWarning: _hasMetaInfo has been deprecated and will be removed in a future version. Please use hasMetaInfo(vm) instead');\n            $root[rootConfigKey].deprecationWarningShown = true;\n          }\n\n          return hasMetaInfo(this);\n        }\n      });\n\n      if (this === $root) {\n        $root.$once('hook:beforeMount', function () {\n          wasServerRendered = this.$el && this.$el.nodeType === 1 && this.$el.hasAttribute('data-server-rendered'); // In most cases when you have a SSR app it will be the first app thats gonna be\n          // initiated, if we cant detect the data-server-rendered attribute from Vue but we\n          // do see our own ssrAttribute then _assume_ the Vue app with appId 1 is the ssr app\n          // attempted fix for #404 & #562, but we rly need to refactor how we pass appIds from\n          // ssr to the client\n\n          if (!wasServerRendered && $root[rootConfigKey] && $root[rootConfigKey].appId === 1) {\n            var htmlTag = getTag({}, 'html');\n            wasServerRendered = htmlTag && htmlTag.hasAttribute(options.ssrAttribute);\n          }\n        });\n      } // Add a marker to know if it uses metaInfo\n      // _vnode is used to know that it's attached to a real component\n      // useful if we use some mixin to add some meta tags (like nuxt-i18n)\n\n\n      if (isUndefined($options[options.keyName]) || $options[options.keyName] === null) {\n        return;\n      }\n\n      if (!$root[rootConfigKey]) {\n        $root[rootConfigKey] = {\n          appId: appId\n        };\n        appId++;\n\n        if (devtoolsEnabled && $root.$options[options.keyName]) {\n          // use nextTick so the children should be added to $root\n          this.$nextTick(function () {\n            // find the first child that lists fnOptions\n            var child = find($root.$children, function (c) {\n              return c.$vnode && c.$vnode.fnOptions;\n            });\n\n            if (child && child.$vnode.fnOptions[options.keyName]) {\n              warn(\"VueMeta has detected a possible global mixin which adds a \".concat(options.keyName, \" property to all Vue components on the page. This could cause severe performance issues. If possible, use $meta().addApp to add meta information instead\"));\n            }\n          });\n        }\n      } // to speed up updates we keep track of branches which have a component with vue-meta info defined\n      // if _vueMeta = true it has info, if _vueMeta = false a child has info\n\n\n      if (!this[rootConfigKey]) {\n        this[rootConfigKey] = true;\n        var parent = this.$parent;\n\n        while (parent && parent !== $root) {\n          if (isUndefined(parent[rootConfigKey])) {\n            parent[rootConfigKey] = false;\n          }\n\n          parent = parent.$parent;\n        }\n      } // coerce function-style metaInfo to a computed prop so we can observe\n      // it on creation\n\n\n      if (isFunction($options[options.keyName])) {\n        $options.computed = $options.computed || {};\n        $options.computed.$metaInfo = $options[options.keyName];\n\n        if (!this.$isServer) {\n          // if computed $metaInfo exists, watch it for updates & trigger a refresh\n          // when it changes (i.e. automatically handle async actions that affect metaInfo)\n          // credit for this suggestion goes to [S\u00E9bastien Chopin](https://github.com/Atinux)\n          this.$on('hook:created', function () {\n            this.$watch('$metaInfo', function () {\n              triggerUpdate(options, this[rootKey], 'watcher');\n            });\n          });\n        }\n      } // force an initial refresh on page load and prevent other lifecycleHooks\n      // to triggerUpdate until this initial refresh is finished\n      // this is to make sure that when a page is opened in an inactive tab which\n      // has throttled rAF/timers we still immediately set the page title\n\n\n      if (isUndefined($root[rootConfigKey].initialized)) {\n        $root[rootConfigKey].initialized = this.$isServer;\n\n        if (!$root[rootConfigKey].initialized) {\n          if (!$root[rootConfigKey].initializedSsr) {\n            $root[rootConfigKey].initializedSsr = true;\n            this.$on('hook:beforeMount', function () {\n              var $root = this[rootKey]; // if this Vue-app was server rendered, set the appId to 'ssr'\n              // only one SSR app per page is supported\n\n              if (wasServerRendered) {\n                $root[rootConfigKey].appId = options.ssrAppId;\n              }\n            });\n          } // we use the mounted hook here as on page load\n\n\n          this.$on('hook:mounted', function () {\n            var $root = this[rootKey];\n\n            if ($root[rootConfigKey].initialized) {\n              return;\n            } // used in triggerUpdate to check if a change was triggered\n            // during initialization\n\n\n            $root[rootConfigKey].initializing = true; // refresh meta in nextTick so all child components have loaded\n\n            this.$nextTick(function () {\n              var _$root$$meta$refresh = $root.$meta().refresh(),\n                  tags = _$root$$meta$refresh.tags,\n                  metaInfo = _$root$$meta$refresh.metaInfo; // After ssr hydration (identifier by tags === false) check\n              // if initialized was set to null in triggerUpdate. That'd mean\n              // that during initilazation changes where triggered which need\n              // to be applied OR a metaInfo watcher was triggered before the\n              // current hook was called\n              // (during initialization all changes are blocked)\n\n\n              if (tags === false && $root[rootConfigKey].initialized === null) {\n                this.$nextTick(function () {\n                  return triggerUpdate(options, $root, 'init');\n                });\n              }\n\n              $root[rootConfigKey].initialized = true;\n              delete $root[rootConfigKey].initializing; // add the navigation guards if they havent been added yet\n              // they are needed for the afterNavigation callback\n\n              if (!options.refreshOnceOnNavigation && metaInfo.afterNavigation) {\n                addNavGuards($root);\n              }\n            });\n          }); // add the navigation guards if requested\n\n          if (options.refreshOnceOnNavigation) {\n            addNavGuards($root);\n          }\n        }\n      }\n\n      this.$on('hook:destroyed', function () {\n        var _this = this;\n\n        // do not trigger refresh:\n        // - when user configured to not wait for transitions on destroyed\n        // - when the component doesnt have a parent\n        // - doesnt have metaInfo defined\n        if (!this.$parent || !hasMetaInfo(this)) {\n          return;\n        }\n\n        delete this._hasMetaInfo;\n        this.$nextTick(function () {\n          if (!options.waitOnDestroyed || !_this.$el || !_this.$el.offsetParent) {\n            triggerUpdate(options, _this.$root, 'destroyed');\n            return;\n          } // Wait that element is hidden before refreshing meta tags (to support animations)\n\n\n          var interval = setInterval(function () {\n            if (_this.$el && _this.$el.offsetParent !== null) {\n              /* istanbul ignore next line */\n              return;\n            }\n\n            clearInterval(interval);\n            triggerUpdate(options, _this.$root, 'destroyed');\n          }, 50);\n        });\n      }); // do not trigger refresh on the server side\n\n      if (this.$isServer) {\n        /* istanbul ignore next */\n        return;\n      } // no need to add this hooks on server side\n\n\n      updateOnLifecycleHook.forEach(function (lifecycleHook) {\n        _this2.$on(\"hook:\".concat(lifecycleHook), function () {\n          triggerUpdate(options, this[rootKey], lifecycleHook);\n        });\n      });\n    }\n  };\n}\n\nfunction setOptions(options) {\n  // combine options\n  options = isObject(options) ? options : {}; // The options are set like this so they can\n  // be minified by terser while keeping the\n  // user api intact\n  // terser --mangle-properties keep_quoted=strict\n\n  /* eslint-disable dot-notation */\n\n  return {\n    keyName: options['keyName'] || defaultOptions.keyName,\n    attribute: options['attribute'] || defaultOptions.attribute,\n    ssrAttribute: options['ssrAttribute'] || defaultOptions.ssrAttribute,\n    tagIDKeyName: options['tagIDKeyName'] || defaultOptions.tagIDKeyName,\n    contentKeyName: options['contentKeyName'] || defaultOptions.contentKeyName,\n    metaTemplateKeyName: options['metaTemplateKeyName'] || defaultOptions.metaTemplateKeyName,\n    debounceWait: isUndefined(options['debounceWait']) ? defaultOptions.debounceWait : options['debounceWait'],\n    waitOnDestroyed: isUndefined(options['waitOnDestroyed']) ? defaultOptions.waitOnDestroyed : options['waitOnDestroyed'],\n    ssrAppId: options['ssrAppId'] || defaultOptions.ssrAppId,\n    refreshOnceOnNavigation: !!options['refreshOnceOnNavigation']\n  };\n  /* eslint-enable dot-notation */\n}\nfunction getOptions(options) {\n  var optionsCopy = {};\n\n  for (var key in options) {\n    optionsCopy[key] = options[key];\n  }\n\n  return optionsCopy;\n}\n\nfunction ensureIsArray(arg, key) {\n  if (!key || !isObject(arg)) {\n    return isArray(arg) ? arg : [];\n  }\n\n  if (!isArray(arg[key])) {\n    arg[key] = [];\n  }\n\n  return arg;\n}\n\nvar serverSequences = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/\"/g, '&quot;'], [/'/g, '&#x27;']];\nvar clientSequences = [[/&/g, \"&\"], [/</g, \"<\"], [/>/g, \">\"], [/\"/g, \"\\\"\"], [/'/g, \"'\"]]; // sanitizes potentially dangerous characters\n\nfunction escape(info, options, escapeOptions, escapeKeys) {\n  var tagIDKeyName = options.tagIDKeyName;\n  var _escapeOptions$doEsca = escapeOptions.doEscape,\n      doEscape = _escapeOptions$doEsca === void 0 ? function (v) {\n    return v;\n  } : _escapeOptions$doEsca;\n  var escaped = {};\n\n  for (var key in info) {\n    var value = info[key]; // no need to escape configuration options\n\n    if (includes(metaInfoOptionKeys, key)) {\n      escaped[key] = value;\n      continue;\n    } // do not use destructuring for disableOptionKeys, it increases transpiled size\n    // due to var checks while we are guaranteed the structure of the cb\n\n\n    var disableKey = disableOptionKeys[0];\n\n    if (escapeOptions[disableKey] && includes(escapeOptions[disableKey], key)) {\n      // this info[key] doesnt need to escaped if the option is listed in __dangerouslyDisableSanitizers\n      escaped[key] = value;\n      continue;\n    }\n\n    var tagId = info[tagIDKeyName];\n\n    if (tagId) {\n      disableKey = disableOptionKeys[1]; // keys which are listed in __dangerouslyDisableSanitizersByTagID for the current vmid do not need to be escaped\n\n      if (escapeOptions[disableKey] && escapeOptions[disableKey][tagId] && includes(escapeOptions[disableKey][tagId], key)) {\n        escaped[key] = value;\n        continue;\n      }\n    }\n\n    if (isString(value)) {\n      escaped[key] = doEscape(value);\n    } else if (isArray(value)) {\n      escaped[key] = value.map(function (v) {\n        if (isPureObject(v)) {\n          return escape(v, options, escapeOptions, true);\n        }\n\n        return doEscape(v);\n      });\n    } else if (isPureObject(value)) {\n      escaped[key] = escape(value, options, escapeOptions, true);\n    } else {\n      escaped[key] = value;\n    }\n\n    if (escapeKeys) {\n      var escapedKey = doEscape(key);\n\n      if (key !== escapedKey) {\n        escaped[escapedKey] = escaped[key];\n        delete escaped[key];\n      }\n    }\n  }\n\n  return escaped;\n}\nfunction escapeMetaInfo(options, info, escapeSequences) {\n  escapeSequences = escapeSequences || []; // do not use destructuring for seq, it increases transpiled size\n  // due to var checks while we are guaranteed the structure of the cb\n\n  var escapeOptions = {\n    doEscape: function doEscape(value) {\n      return escapeSequences.reduce(function (val, seq) {\n        return val.replace(seq[0], seq[1]);\n      }, value);\n    }\n  };\n  disableOptionKeys.forEach(function (disableKey, index) {\n    if (index === 0) {\n      ensureIsArray(info, disableKey);\n    } else if (index === 1) {\n      for (var key in info[disableKey]) {\n        ensureIsArray(info[disableKey], key);\n      }\n    }\n\n    escapeOptions[disableKey] = info[disableKey];\n  }); // begin sanitization\n\n  return escape(info, options, escapeOptions);\n}\n\nfunction applyTemplate(_ref, headObject, template, chunk) {\n  var component = _ref.component,\n      metaTemplateKeyName = _ref.metaTemplateKeyName,\n      contentKeyName = _ref.contentKeyName;\n\n  if (template === true || headObject[metaTemplateKeyName] === true) {\n    // abort, template was already applied\n    return false;\n  }\n\n  if (isUndefined(template) && headObject[metaTemplateKeyName]) {\n    template = headObject[metaTemplateKeyName];\n    headObject[metaTemplateKeyName] = true;\n  } // return early if no template defined\n\n\n  if (!template) {\n    // cleanup faulty template properties\n    delete headObject[metaTemplateKeyName];\n    return false;\n  }\n\n  if (isUndefined(chunk)) {\n    chunk = headObject[contentKeyName];\n  }\n\n  headObject[contentKeyName] = isFunction(template) ? template.call(component, chunk) : template.replace(/%s/g, chunk);\n  return true;\n}\n\nfunction _arrayMerge(_ref, target, source) {\n  var component = _ref.component,\n      tagIDKeyName = _ref.tagIDKeyName,\n      metaTemplateKeyName = _ref.metaTemplateKeyName,\n      contentKeyName = _ref.contentKeyName;\n  // we concat the arrays without merging objects contained in,\n  // but we check for a `vmid` property on each object in the array\n  // using an O(1) lookup associative array exploit\n  var destination = [];\n\n  if (!target.length && !source.length) {\n    return destination;\n  }\n\n  target.forEach(function (targetItem, targetIndex) {\n    // no tagID so no need to check for duplicity\n    if (!targetItem[tagIDKeyName]) {\n      destination.push(targetItem);\n      return;\n    }\n\n    var sourceIndex = findIndex(source, function (item) {\n      return item[tagIDKeyName] === targetItem[tagIDKeyName];\n    });\n    var sourceItem = source[sourceIndex]; // source doesnt contain any duplicate vmid's, we can keep targetItem\n\n    if (sourceIndex === -1) {\n      destination.push(targetItem);\n      return;\n    } // when sourceItem explictly defines contentKeyName or innerHTML as undefined, its\n    // an indication that we need to skip the default behaviour or child has preference over parent\n    // which means we keep the targetItem and ignore/remove the sourceItem\n\n\n    if (contentKeyName in sourceItem && sourceItem[contentKeyName] === undefined || 'innerHTML' in sourceItem && sourceItem.innerHTML === undefined) {\n      destination.push(targetItem); // remove current index from source array so its not concatenated to destination below\n\n      source.splice(sourceIndex, 1);\n      return;\n    } // we now know that targetItem is a duplicate and we should ignore it in favor of sourceItem\n    // if source specifies null as content then ignore both the target as the source\n\n\n    if (sourceItem[contentKeyName] === null || sourceItem.innerHTML === null) {\n      // remove current index from source array so its not concatenated to destination below\n      source.splice(sourceIndex, 1);\n      return;\n    } // now we only need to check if the target has a template to combine it with the source\n\n\n    var targetTemplate = targetItem[metaTemplateKeyName];\n\n    if (!targetTemplate) {\n      return;\n    }\n\n    var sourceTemplate = sourceItem[metaTemplateKeyName];\n\n    if (!sourceTemplate) {\n      // use parent template and child content\n      applyTemplate({\n        component: component,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName\n      }, sourceItem, targetTemplate); // set template to true to indicate template was already applied\n\n      sourceItem.template = true;\n      return;\n    }\n\n    if (!sourceItem[contentKeyName]) {\n      // use parent content and child template\n      applyTemplate({\n        component: component,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName\n      }, sourceItem, undefined, targetItem[contentKeyName]);\n    }\n  });\n  return destination.concat(source);\n}\nvar warningShown = false;\nfunction merge(target, source, options) {\n  options = options || {}; // remove properties explicitly set to false so child components can\n  // optionally _not_ overwrite the parents content\n  // (for array properties this is checked in arrayMerge)\n\n  if (source.title === undefined) {\n    delete source.title;\n  }\n\n  metaInfoAttributeKeys.forEach(function (attrKey) {\n    if (!source[attrKey]) {\n      return;\n    }\n\n    for (var key in source[attrKey]) {\n      if (key in source[attrKey] && source[attrKey][key] === undefined) {\n        if (includes(booleanHtmlAttributes, key) && !warningShown) {\n          warn('VueMeta: Please note that since v2 the value undefined is not used to indicate boolean attributes anymore, see migration guide for details');\n          warningShown = true;\n        }\n\n        delete source[attrKey][key];\n      }\n    }\n  });\n  return deepmerge(target, source, {\n    arrayMerge: function arrayMerge(t, s) {\n      return _arrayMerge(options, t, s);\n    }\n  });\n}\n\nfunction getComponentMetaInfo(options, component) {\n  return getComponentOption(options || {}, component, defaultInfo);\n}\n/**\n * Returns the `opts.option` $option value of the given `opts.component`.\n * If methods are encountered, they will be bound to the component context.\n * If `opts.deep` is true, will recursively merge all child component\n * `opts.option` $option values into the returned result.\n *\n * @param  {Object} opts - options\n * @param  {Object} opts.component - Vue component to fetch option data from\n * @param  {Boolean} opts.deep - look for data in child components as well?\n * @param  {Function} opts.arrayMerge - how should arrays be merged?\n * @param  {String} opts.keyName - the name of the option to look for\n * @param  {Object} [result={}] - result so far\n * @return {Object} result - final aggregated result\n */\n\nfunction getComponentOption(options, component, result) {\n  result = result || {};\n\n  if (component._inactive) {\n    return result;\n  }\n\n  options = options || {};\n  var _options = options,\n      keyName = _options.keyName;\n  var $metaInfo = component.$metaInfo,\n      $options = component.$options,\n      $children = component.$children; // only collect option data if it exists\n\n  if ($options[keyName]) {\n    // if $metaInfo exists then [keyName] was defined as a function\n    // and set to the computed prop $metaInfo in the mixin\n    // using the computed prop should be a small performance increase\n    // because Vue caches those internally\n    var data = $metaInfo || $options[keyName]; // only merge data with result when its an object\n    // eg it could be a function when metaInfo() returns undefined\n    // dueo to the or statement above\n\n    if (isObject(data)) {\n      result = merge(result, data, options);\n    }\n  } // collect & aggregate child options if deep = true\n\n\n  if ($children.length) {\n    $children.forEach(function (childComponent) {\n      // check if the childComponent is in a branch\n      // return otherwise so we dont walk all component branches unnecessarily\n      if (!inMetaInfoBranch(childComponent)) {\n        return;\n      }\n\n      result = getComponentOption(options, childComponent, result);\n    });\n  }\n\n  return result;\n}\n\nvar callbacks = [];\nfunction isDOMComplete(d) {\n  return (d || document).readyState === 'complete';\n}\nfunction addCallback(query, callback) {\n  if (arguments.length === 1) {\n    callback = query;\n    query = '';\n  }\n\n  callbacks.push([query, callback]);\n}\nfunction addCallbacks(_ref, type, tags, autoAddListeners) {\n  var tagIDKeyName = _ref.tagIDKeyName;\n  var hasAsyncCallback = false;\n  tags.forEach(function (tag) {\n    if (!tag[tagIDKeyName] || !tag.callback) {\n      return;\n    }\n\n    hasAsyncCallback = true;\n    addCallback(\"\".concat(type, \"[data-\").concat(tagIDKeyName, \"=\\\"\").concat(tag[tagIDKeyName], \"\\\"]\"), tag.callback);\n  });\n\n  if (!autoAddListeners || !hasAsyncCallback) {\n    return hasAsyncCallback;\n  }\n\n  return addListeners();\n}\nfunction addListeners() {\n  if (isDOMComplete()) {\n    applyCallbacks();\n    return;\n  } // Instead of using a MutationObserver, we just apply\n\n  /* istanbul ignore next */\n\n\n  document.onreadystatechange = function () {\n    applyCallbacks();\n  };\n}\nfunction applyCallbacks(matchElement) {\n  callbacks.forEach(function (args) {\n    // do not use destructuring for args, it increases transpiled size\n    // due to var checks while we are guaranteed the structure of the cb\n    var query = args[0];\n    var callback = args[1];\n    var selector = \"\".concat(query, \"[onload=\\\"this.__vm_l=1\\\"]\");\n    var elements = [];\n\n    if (!matchElement) {\n      elements = toArray(querySelector(selector));\n    }\n\n    if (matchElement && matchElement.matches(selector)) {\n      elements = [matchElement];\n    }\n\n    elements.forEach(function (element) {\n      /* __vm_cb: whether the load callback has been called\n       * __vm_l: set by onload attribute, whether the element was loaded\n       * __vm_ev: whether the event listener was added or not\n       */\n      if (element.__vm_cb) {\n        return;\n      }\n\n      var onload = function onload() {\n        /* Mark that the callback for this element has already been called,\n         * this prevents the callback to run twice in some (rare) conditions\n         */\n        element.__vm_cb = true;\n        /* onload needs to be removed because we only need the\n         * attribute after ssr and if we dont remove it the node\n         * will fail isEqualNode on the client\n         */\n\n        removeAttribute(element, 'onload');\n        callback(element);\n      };\n      /* IE9 doesnt seem to load scripts synchronously,\n       * causing a script sometimes/often already to be loaded\n       * when we add the event listener below (thus adding an onload event\n       * listener has no use because it will never be triggered).\n       * Therefore we add the onload attribute during ssr, and\n       * check here if it was already loaded or not\n       */\n\n\n      if (element.__vm_l) {\n        onload();\n        return;\n      }\n\n      if (!element.__vm_ev) {\n        element.__vm_ev = true;\n        element.addEventListener('load', onload);\n      }\n    });\n  });\n}\n\n// instead of adding it to the html\n\nvar attributeMap = {};\n/**\n * Updates the document's html tag attributes\n *\n * @param  {Object} attrs - the new document html attributes\n * @param  {HTMLElement} tag - the HTMLElement tag to update with new attrs\n */\n\nfunction updateAttribute(appId, options, type, attrs, tag) {\n  var _ref = options || {},\n      attribute = _ref.attribute;\n\n  var vueMetaAttrString = tag.getAttribute(attribute);\n\n  if (vueMetaAttrString) {\n    attributeMap[type] = JSON.parse(decodeURI(vueMetaAttrString));\n    removeAttribute(tag, attribute);\n  }\n\n  var data = attributeMap[type] || {};\n  var toUpdate = []; // remove attributes from the map\n  // which have been removed for this appId\n\n  for (var attr in data) {\n    if (data[attr] !== undefined && appId in data[attr]) {\n      toUpdate.push(attr);\n\n      if (!attrs[attr]) {\n        delete data[attr][appId];\n      }\n    }\n  }\n\n  for (var _attr in attrs) {\n    var attrData = data[_attr];\n\n    if (!attrData || attrData[appId] !== attrs[_attr]) {\n      toUpdate.push(_attr);\n\n      if (attrs[_attr] !== undefined) {\n        data[_attr] = data[_attr] || {};\n        data[_attr][appId] = attrs[_attr];\n      }\n    }\n  }\n\n  for (var _i = 0, _toUpdate = toUpdate; _i < _toUpdate.length; _i++) {\n    var _attr2 = _toUpdate[_i];\n    var _attrData = data[_attr2];\n    var attrValues = [];\n\n    for (var _appId in _attrData) {\n      Array.prototype.push.apply(attrValues, [].concat(_attrData[_appId]));\n    }\n\n    if (attrValues.length) {\n      var attrValue = includes(booleanHtmlAttributes, _attr2) && attrValues.some(Boolean) ? '' : attrValues.filter(function (v) {\n        return v !== undefined;\n      }).join(' ');\n      tag.setAttribute(_attr2, attrValue);\n    } else {\n      removeAttribute(tag, _attr2);\n    }\n  }\n\n  attributeMap[type] = data;\n}\n\n/**\n * Updates the document title\n *\n * @param  {String} title - the new title of the document\n */\nfunction updateTitle(title) {\n  if (!title && title !== '') {\n    return;\n  }\n\n  document.title = title;\n}\n\n/**\n * Updates meta tags inside <head> and <body> on the client. Borrowed from `react-helmet`:\n * https://github.com/nfl/react-helmet/blob/004d448f8de5f823d10f838b02317521180f34da/src/Helmet.js#L195-L245\n *\n * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} type - the name of the tag\n * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n * @return {Object} - a representation of what tags changed\n */\n\nfunction updateTag(appId, options, type, tags, head, body) {\n  var _ref = options || {},\n      attribute = _ref.attribute,\n      tagIDKeyName = _ref.tagIDKeyName;\n\n  var dataAttributes = commonDataAttributes.slice();\n  dataAttributes.push(tagIDKeyName);\n  var newElements = [];\n  var queryOptions = {\n    appId: appId,\n    attribute: attribute,\n    type: type,\n    tagIDKeyName: tagIDKeyName\n  };\n  var currentElements = {\n    head: queryElements(head, queryOptions),\n    pbody: queryElements(body, queryOptions, {\n      pbody: true\n    }),\n    body: queryElements(body, queryOptions, {\n      body: true\n    })\n  };\n\n  if (tags.length > 1) {\n    // remove duplicates that could have been found by merging tags\n    // which include a mixin with metaInfo and that mixin is used\n    // by multiple components on the same page\n    var found = [];\n    tags = tags.filter(function (x) {\n      var k = JSON.stringify(x);\n      var res = !includes(found, k);\n      found.push(k);\n      return res;\n    });\n  }\n\n  tags.forEach(function (tag) {\n    if (tag.skip) {\n      return;\n    }\n\n    var newElement = document.createElement(type);\n\n    if (!tag.once) {\n      newElement.setAttribute(attribute, appId);\n    }\n\n    Object.keys(tag).forEach(function (attr) {\n      /* istanbul ignore next */\n      if (includes(tagProperties, attr)) {\n        return;\n      }\n\n      if (attr === 'innerHTML') {\n        newElement.innerHTML = tag.innerHTML;\n        return;\n      }\n\n      if (attr === 'json') {\n        newElement.innerHTML = JSON.stringify(tag.json);\n        return;\n      }\n\n      if (attr === 'cssText') {\n        if (newElement.styleSheet) {\n          /* istanbul ignore next */\n          newElement.styleSheet.cssText = tag.cssText;\n        } else {\n          newElement.appendChild(document.createTextNode(tag.cssText));\n        }\n\n        return;\n      }\n\n      if (attr === 'callback') {\n        newElement.onload = function () {\n          return tag[attr](newElement);\n        };\n\n        return;\n      }\n\n      var _attr = includes(dataAttributes, attr) ? \"data-\".concat(attr) : attr;\n\n      var isBooleanAttribute = includes(booleanHtmlAttributes, attr);\n\n      if (isBooleanAttribute && !tag[attr]) {\n        return;\n      }\n\n      var value = isBooleanAttribute ? '' : tag[attr];\n      newElement.setAttribute(_attr, value);\n    });\n    var oldElements = currentElements[getElementsKey(tag)]; // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n\n    var indexToDelete;\n    var hasEqualElement = oldElements.some(function (existingTag, index) {\n      indexToDelete = index;\n      return newElement.isEqualNode(existingTag);\n    });\n\n    if (hasEqualElement && (indexToDelete || indexToDelete === 0)) {\n      oldElements.splice(indexToDelete, 1);\n    } else {\n      newElements.push(newElement);\n    }\n  });\n  var oldElements = [];\n\n  for (var _type in currentElements) {\n    Array.prototype.push.apply(oldElements, currentElements[_type]);\n  } // remove old elements\n\n\n  oldElements.forEach(function (element) {\n    element.parentNode.removeChild(element);\n  }); // insert new elements\n\n  newElements.forEach(function (element) {\n    if (element.hasAttribute('data-body')) {\n      body.appendChild(element);\n      return;\n    }\n\n    if (element.hasAttribute('data-pbody')) {\n      body.insertBefore(element, body.firstChild);\n      return;\n    }\n\n    head.appendChild(element);\n  });\n  return {\n    oldTags: oldElements,\n    newTags: newElements\n  };\n}\n\n/**\n * Performs client-side updates when new meta info is received\n *\n * @param  {Object} newInfo - the meta info to update to\n */\n\nfunction updateClientMetaInfo(appId, options, newInfo) {\n  options = options || {};\n  var _options = options,\n      ssrAttribute = _options.ssrAttribute,\n      ssrAppId = _options.ssrAppId; // only cache tags for current update\n\n  var tags = {};\n  var htmlTag = getTag(tags, 'html'); // if this is a server render, then dont update\n\n  if (appId === ssrAppId && htmlTag.hasAttribute(ssrAttribute)) {\n    // remove the server render attribute so we can update on (next) changes\n    removeAttribute(htmlTag, ssrAttribute); // add load callbacks if the\n\n    var addLoadListeners = false;\n    tagsSupportingOnload.forEach(function (type) {\n      if (newInfo[type] && addCallbacks(options, type, newInfo[type])) {\n        addLoadListeners = true;\n      }\n    });\n\n    if (addLoadListeners) {\n      addListeners();\n    }\n\n    return false;\n  } // initialize tracked changes\n\n\n  var tagsAdded = {};\n  var tagsRemoved = {};\n\n  for (var type in newInfo) {\n    // ignore these\n    if (includes(metaInfoOptionKeys, type)) {\n      continue;\n    }\n\n    if (type === 'title') {\n      // update the title\n      updateTitle(newInfo.title);\n      continue;\n    }\n\n    if (includes(metaInfoAttributeKeys, type)) {\n      var tagName = type.substr(0, 4);\n      updateAttribute(appId, options, type, newInfo[type], getTag(tags, tagName));\n      continue;\n    } // tags should always be an array, ignore if it isnt\n\n\n    if (!isArray(newInfo[type])) {\n      continue;\n    }\n\n    var _updateTag = updateTag(appId, options, type, newInfo[type], getTag(tags, 'head'), getTag(tags, 'body')),\n        oldTags = _updateTag.oldTags,\n        newTags = _updateTag.newTags;\n\n    if (newTags.length) {\n      tagsAdded[type] = newTags;\n      tagsRemoved[type] = oldTags;\n    }\n  }\n\n  return {\n    tagsAdded: tagsAdded,\n    tagsRemoved: tagsRemoved\n  };\n}\n\nvar appsMetaInfo;\nfunction addApp(rootVm, appId, options) {\n  return {\n    set: function set(metaInfo) {\n      return setMetaInfo(rootVm, appId, options, metaInfo);\n    },\n    remove: function remove() {\n      return removeMetaInfo(rootVm, appId, options);\n    }\n  };\n}\nfunction setMetaInfo(rootVm, appId, options, metaInfo) {\n  // if a vm exists _and_ its mounted then immediately update\n  if (rootVm && rootVm.$el) {\n    return updateClientMetaInfo(appId, options, metaInfo);\n  } // store for later, the info\n  // will be set on the first refresh\n\n\n  appsMetaInfo = appsMetaInfo || {};\n  appsMetaInfo[appId] = metaInfo;\n}\nfunction removeMetaInfo(rootVm, appId, options) {\n  if (rootVm && rootVm.$el) {\n    var tags = {};\n\n    var _iterator = _createForOfIteratorHelper(metaInfoAttributeKeys),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var type = _step.value;\n        var tagName = type.substr(0, 4);\n        updateAttribute(appId, options, type, {}, getTag(tags, tagName));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return removeElementsByAppId(options, appId);\n  }\n\n  if (appsMetaInfo[appId]) {\n    delete appsMetaInfo[appId];\n    clearAppsMetaInfo();\n  }\n}\nfunction getAppsMetaInfo() {\n  return appsMetaInfo;\n}\nfunction clearAppsMetaInfo(force) {\n  if (force || !Object.keys(appsMetaInfo).length) {\n    appsMetaInfo = undefined;\n  }\n}\n\n/**\n * Returns the correct meta info for the given component\n * (child components will overwrite parent meta info)\n *\n * @param  {Object} component - the Vue instance to get meta info from\n * @return {Object} - returned meta info\n */\n\nfunction getMetaInfo(options, info, escapeSequences, component) {\n  options = options || {};\n  escapeSequences = escapeSequences || [];\n  var _options = options,\n      tagIDKeyName = _options.tagIDKeyName; // Remove all \"template\" tags from meta\n  // backup the title chunk in case user wants access to it\n\n  if (info.title) {\n    info.titleChunk = info.title;\n  } // replace title with populated template\n\n\n  if (info.titleTemplate && info.titleTemplate !== '%s') {\n    applyTemplate({\n      component: component,\n      contentKeyName: 'title'\n    }, info, info.titleTemplate, info.titleChunk || '');\n  } // convert base tag to an array so it can be handled the same way\n  // as the other tags\n\n\n  if (info.base) {\n    info.base = Object.keys(info.base).length ? [info.base] : [];\n  }\n\n  if (info.meta) {\n    // remove meta items with duplicate vmid's\n    info.meta = info.meta.filter(function (metaItem, index, arr) {\n      var hasVmid = !!metaItem[tagIDKeyName];\n\n      if (!hasVmid) {\n        return true;\n      }\n\n      var isFirstItemForVmid = index === findIndex(arr, function (item) {\n        return item[tagIDKeyName] === metaItem[tagIDKeyName];\n      });\n      return isFirstItemForVmid;\n    }); // apply templates if needed\n\n    info.meta.forEach(function (metaObject) {\n      return applyTemplate(options, metaObject);\n    });\n  }\n\n  return escapeMetaInfo(options, info, escapeSequences);\n}\n\n/**\n * When called, will update the current meta info with new meta info.\n * Useful when updating meta info as the result of an asynchronous\n * action that resolves after the initial render takes place.\n *\n * Credit to [S\u00E9bastien Chopin](https://github.com/Atinux) for the suggestion\n * to implement this method.\n *\n * @return {Object} - new meta info\n */\n\nfunction refresh(rootVm, options) {\n  options = options || {}; // make sure vue-meta was initiated\n\n  if (!rootVm[rootConfigKey]) {\n    showWarningNotSupported();\n    return {};\n  } // collect & aggregate all metaInfo $options\n\n\n  var rawInfo = getComponentMetaInfo(options, rootVm);\n  var metaInfo = getMetaInfo(options, rawInfo, clientSequences, rootVm);\n  var appId = rootVm[rootConfigKey].appId;\n  var tags = updateClientMetaInfo(appId, options, metaInfo); // emit \"event\" with new info\n\n  if (tags && isFunction(metaInfo.changed)) {\n    metaInfo.changed(metaInfo, tags.tagsAdded, tags.tagsRemoved);\n    tags = {\n      addedTags: tags.tagsAdded,\n      removedTags: tags.tagsRemoved\n    };\n  }\n\n  var appsMetaInfo = getAppsMetaInfo();\n\n  if (appsMetaInfo) {\n    for (var additionalAppId in appsMetaInfo) {\n      updateClientMetaInfo(additionalAppId, options, appsMetaInfo[additionalAppId]);\n      delete appsMetaInfo[additionalAppId];\n    }\n\n    clearAppsMetaInfo(true);\n  }\n\n  return {\n    vm: rootVm,\n    metaInfo: metaInfo,\n    // eslint-disable-line object-shorthand\n    tags: tags\n  };\n}\n\n/**\n * Generates tag attributes for use on the server.\n *\n * @param  {('bodyAttrs'|'htmlAttrs'|'headAttrs')} type - the type of attributes to generate\n * @param  {Object} data - the attributes to generate\n * @return {Object} - the attribute generator\n */\n\nfunction attributeGenerator(options, type, data, _ref) {\n  var addSsrAttribute = _ref.addSsrAttribute;\n\n  var _ref2 = options || {},\n      attribute = _ref2.attribute,\n      ssrAttribute = _ref2.ssrAttribute;\n\n  var attributeStr = '';\n\n  for (var attr in data) {\n    var attrData = data[attr];\n    var attrValues = [];\n\n    for (var appId in attrData) {\n      attrValues.push.apply(attrValues, _toConsumableArray([].concat(attrData[appId])));\n    }\n\n    if (attrValues.length) {\n      attributeStr += booleanHtmlAttributes.includes(attr) && attrValues.some(Boolean) ? \"\".concat(attr) : \"\".concat(attr, \"=\\\"\").concat(attrValues.join(' '), \"\\\"\");\n      attributeStr += ' ';\n    }\n  }\n\n  if (attributeStr) {\n    attributeStr += \"\".concat(attribute, \"=\\\"\").concat(encodeURI(JSON.stringify(data)), \"\\\"\");\n  }\n\n  if (type === 'htmlAttrs' && addSsrAttribute) {\n    return \"\".concat(ssrAttribute).concat(attributeStr ? ' ' : '').concat(attributeStr);\n  }\n\n  return attributeStr;\n}\n\n/**\n * Generates title output for the server\n *\n * @param  {'title'} type - the string \"title\"\n * @param  {String} data - the title text\n * @return {Object} - the title generator\n */\nfunction titleGenerator(options, type, data, generatorOptions) {\n  var _ref = generatorOptions || {},\n      ln = _ref.ln;\n\n  if (!data) {\n    return '';\n  }\n\n  return \"<\".concat(type, \">\").concat(data, \"</\").concat(type, \">\").concat(ln ? '\\n' : '');\n}\n\n/**\n * Generates meta, base, link, style, script, noscript tags for use on the server\n *\n * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} the name of the tag\n * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n * @return {Object} - the tag generator\n */\n\nfunction tagGenerator(options, type, tags, generatorOptions) {\n  var _ref = options || {},\n      ssrAppId = _ref.ssrAppId,\n      attribute = _ref.attribute,\n      tagIDKeyName = _ref.tagIDKeyName;\n\n  var _ref2 = generatorOptions || {},\n      appId = _ref2.appId,\n      _ref2$isSSR = _ref2.isSSR,\n      isSSR = _ref2$isSSR === void 0 ? true : _ref2$isSSR,\n      _ref2$body = _ref2.body,\n      body = _ref2$body === void 0 ? false : _ref2$body,\n      _ref2$pbody = _ref2.pbody,\n      pbody = _ref2$pbody === void 0 ? false : _ref2$pbody,\n      _ref2$ln = _ref2.ln,\n      ln = _ref2$ln === void 0 ? false : _ref2$ln;\n\n  var dataAttributes = [tagIDKeyName].concat(_toConsumableArray(commonDataAttributes));\n\n  if (!tags || !tags.length) {\n    return '';\n  } // build a string containing all tags of this type\n\n\n  return tags.reduce(function (tagsStr, tag) {\n    if (tag.skip) {\n      return tagsStr;\n    }\n\n    var tagKeys = Object.keys(tag);\n\n    if (tagKeys.length === 0) {\n      return tagsStr; // Bail on empty tag object\n    }\n\n    if (Boolean(tag.body) !== body || Boolean(tag.pbody) !== pbody) {\n      return tagsStr;\n    }\n\n    var attrs = tag.once ? '' : \" \".concat(attribute, \"=\\\"\").concat(appId || (isSSR === false ? '1' : ssrAppId), \"\\\"\"); // build a string containing all attributes of this tag\n\n    for (var attr in tag) {\n      // these attributes are treated as children on the tag\n      if (tagAttributeAsInnerContent.includes(attr) || tagProperties.includes(attr)) {\n        continue;\n      }\n\n      if (attr === 'callback') {\n        attrs += ' onload=\"this.__vm_l=1\"';\n        continue;\n      } // these form the attribute list for this tag\n\n\n      var prefix = '';\n\n      if (dataAttributes.includes(attr)) {\n        prefix = 'data-';\n      }\n\n      var isBooleanAttr = !prefix && booleanHtmlAttributes.includes(attr);\n\n      if (isBooleanAttr && !tag[attr]) {\n        continue;\n      }\n\n      attrs += \" \".concat(prefix).concat(attr) + (isBooleanAttr ? '' : \"=\\\"\".concat(tag[attr], \"\\\"\"));\n    }\n\n    var json = '';\n\n    if (tag.json) {\n      json = JSON.stringify(tag.json);\n    } // grab child content from one of these attributes, if possible\n\n\n    var content = tag.innerHTML || tag.cssText || json; // generate tag exactly without any other redundant attribute\n    // these tags have no end tag\n\n    var hasEndTag = !tagsWithoutEndTag.includes(type); // these tag types will have content inserted\n\n    var hasContent = hasEndTag && tagsWithInnerContent.includes(type); // the final string for this specific tag\n\n    return \"\".concat(tagsStr, \"<\").concat(type).concat(attrs).concat(!hasContent && hasEndTag ? '/' : '', \">\") + (hasContent ? \"\".concat(content, \"</\").concat(type, \">\") : '') + (ln ? '\\n' : '');\n  }, '');\n}\n\n/**\n * Converts a meta info property to one that can be stringified on the server\n *\n * @param  {String} type - the type of data to convert\n * @param  {(String|Object|Array<Object>)} data - the data value\n * @return {Object} - the new injector\n */\n\nfunction generateServerInjector(options, metaInfo, globalInjectOptions) {\n  var serverInjector = {\n    data: metaInfo,\n    extraData: undefined,\n    addInfo: function addInfo(appId, metaInfo) {\n      this.extraData = this.extraData || {};\n      this.extraData[appId] = metaInfo;\n    },\n    callInjectors: function callInjectors(opts) {\n      var m = this.injectors; // only call title for the head\n\n      return (opts.body || opts.pbody ? '' : m.title.text(opts)) + m.meta.text(opts) + m.base.text(opts) + m.link.text(opts) + m.style.text(opts) + m.script.text(opts) + m.noscript.text(opts);\n    },\n    injectors: {\n      head: function head(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln\n        }));\n      },\n      bodyPrepend: function bodyPrepend(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln,\n          pbody: true\n        }));\n      },\n      bodyAppend: function bodyAppend(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln,\n          body: true\n        }));\n      }\n    }\n  };\n\n  var _loop = function _loop(type) {\n    if (metaInfoOptionKeys.includes(type)) {\n      return \"continue\";\n    }\n\n    serverInjector.injectors[type] = {\n      text: function text(injectOptions) {\n        var addSsrAttribute = injectOptions === true;\n        injectOptions = _objectSpread2(_objectSpread2({\n          addSsrAttribute: addSsrAttribute\n        }, globalInjectOptions), injectOptions);\n\n        if (type === 'title') {\n          return titleGenerator(options, type, serverInjector.data[type], injectOptions);\n        }\n\n        if (metaInfoAttributeKeys.includes(type)) {\n          var attributeData = {};\n          var data = serverInjector.data[type];\n\n          if (data) {\n            var appId = injectOptions.isSSR === false ? '1' : options.ssrAppId;\n\n            for (var attr in data) {\n              attributeData[attr] = _defineProperty({}, appId, data[attr]);\n            }\n          }\n\n          if (serverInjector.extraData) {\n            for (var _appId in serverInjector.extraData) {\n              var _data = serverInjector.extraData[_appId][type];\n\n              if (_data) {\n                for (var _attr in _data) {\n                  attributeData[_attr] = _objectSpread2(_objectSpread2({}, attributeData[_attr]), {}, _defineProperty({}, _appId, _data[_attr]));\n                }\n              }\n            }\n          }\n\n          return attributeGenerator(options, type, attributeData, injectOptions);\n        }\n\n        var str = tagGenerator(options, type, serverInjector.data[type], injectOptions);\n\n        if (serverInjector.extraData) {\n          for (var _appId2 in serverInjector.extraData) {\n            var _data2 = serverInjector.extraData[_appId2][type];\n            var extraStr = tagGenerator(options, type, _data2, _objectSpread2({\n              appId: _appId2\n            }, injectOptions));\n            str = \"\".concat(str).concat(extraStr);\n          }\n        }\n\n        return str;\n      }\n    };\n  };\n\n  for (var type in defaultInfo) {\n    var _ret = _loop(type);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return serverInjector;\n}\n\n/**\n * Converts the state of the meta info object such that each item\n * can be compiled to a tag string on the server\n *\n * @vm {Object} - Vue instance - ideally the root component\n * @return {Object} - server meta info with `toString` methods\n */\n\nfunction inject(rootVm, options, injectOptions) {\n  // make sure vue-meta was initiated\n  if (!rootVm[rootConfigKey]) {\n    showWarningNotSupported();\n    return {};\n  } // collect & aggregate all metaInfo $options\n\n\n  var rawInfo = getComponentMetaInfo(options, rootVm);\n  var metaInfo = getMetaInfo(options, rawInfo, serverSequences, rootVm); // generate server injector\n\n  var serverInjector = generateServerInjector(options, metaInfo, injectOptions); // add meta info from additional apps\n\n  var appsMetaInfo = getAppsMetaInfo();\n\n  if (appsMetaInfo) {\n    for (var additionalAppId in appsMetaInfo) {\n      serverInjector.addInfo(additionalAppId, appsMetaInfo[additionalAppId]);\n      delete appsMetaInfo[additionalAppId];\n    }\n\n    clearAppsMetaInfo(true);\n  }\n\n  return serverInjector.injectors;\n}\n\nfunction $meta(options) {\n  options = options || {};\n  /**\n   * Returns an injector for server-side rendering.\n   * @this {Object} - the Vue instance (a root component)\n   * @return {Object} - injector\n   */\n\n  var $root = this.$root;\n  return {\n    getOptions: function getOptions$1() {\n      return getOptions(options);\n    },\n    setOptions: function setOptions(newOptions) {\n      var refreshNavKey = 'refreshOnceOnNavigation';\n\n      if (newOptions && newOptions[refreshNavKey]) {\n        options.refreshOnceOnNavigation = !!newOptions[refreshNavKey];\n        addNavGuards($root);\n      }\n\n      var debounceWaitKey = 'debounceWait';\n\n      if (newOptions && debounceWaitKey in newOptions) {\n        var debounceWait = parseInt(newOptions[debounceWaitKey]);\n\n        if (!isNaN(debounceWait)) {\n          options.debounceWait = debounceWait;\n        }\n      }\n\n      var waitOnDestroyedKey = 'waitOnDestroyed';\n\n      if (newOptions && waitOnDestroyedKey in newOptions) {\n        options.waitOnDestroyed = !!newOptions[waitOnDestroyedKey];\n      }\n    },\n    refresh: function refresh$1() {\n      return refresh($root, options);\n    },\n    inject: function inject$1(injectOptions) {\n      return  inject($root, options, injectOptions) ;\n    },\n    pause: function pause$1() {\n      return pause($root);\n    },\n    resume: function resume$1() {\n      return resume($root);\n    },\n    addApp: function addApp$1(appId) {\n      return addApp($root, appId, options);\n    }\n  };\n}\n\nfunction generate(rawInfo, options) {\n  options = setOptions(options);\n  var metaInfo = getMetaInfo(options, rawInfo, serverSequences);\n  var serverInjector = generateServerInjector(options, metaInfo);\n  return serverInjector.injectors;\n}\n\n/**\n * Plugin install function.\n * @param {Function} Vue - the Vue constructor.\n */\n\nfunction install(Vue, options) {\n  if (Vue.__vuemeta_installed) {\n    return;\n  }\n\n  Vue.__vuemeta_installed = true;\n  options = setOptions(options);\n\n  Vue.prototype.$meta = function () {\n    return $meta.call(this, options);\n  };\n\n  Vue.mixin(createMixin(Vue, options));\n}\n\nvar index = {\n  version: version,\n  install: install,\n  generate: function generate$1(metaInfo, options) {\n    return  generate(metaInfo, options) ;\n  },\n  hasMetaInfo: hasMetaInfo\n};\n\nexport default index;\n", "import d from \"./node_modules/vue-meta/dist/vue-meta.esm.js\";export default d;"],
  "mappings": "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",
  "names": ["isMergeableObject", "deepmerge", "obj", "showWarningNotSupported", "debounceWait", "querySelector", "appId", "attribute", "tagIDKeyName", "refresh", "$root", "index", "metaTemplateKeyName", "contentKeyName", "deepmerge", "keyName", "onload", "oldElements", "ssrAttribute", "ssrAppId", "type", "appsMetaInfo", "metaInfo", "_loop", "setOptions"]
}
